/** @format */

:root {
	--small: 0.25em;
	--med: 0.625em;
	--large: 1.5em;
	--ctaRow-height: 4.5rem;
}
/* stylelint-disable */

/* Themeing Variables */
body[theme="dark"] {
	--c-text: #fbfbfb;
	--c-app-bgrd: #19191a;
	--c-input-bgrd: #ffffff79;
	--c-input-contrast: #161616;
	--c-outline: #ff9765cc;
	--c-signal-icon: #7fffd4;
	--c-signal-icon-contrast: #161616;
	--c-signal-trash: #a4090a;
	--c-card-bgrd: 255, 255, 254; /* rgba value created at hover */
	--c-card-text: #fbfbfb;
	--c-btn-border: #ffffff80;
	--c-placeholder: #fbfbfb;
	--c-browser-window-grad: transparent
		radial-gradient(closest-side at 23% 40%, #0d9be4 0%, #003d99 100%) 0% 0%
		no-repeat padding-box;
	--c-cta-row: #19191a;
}
body[theme="light"] {
	--c-text: #fbfbfb;
	--c-app-bgrd: #19191a30;
	--c-input-bgrd: #ffffff94;
	--c-input-contrast: #161616;
	--c-outline: #ff9765cc;
	--c-signal-icon: #ffd600;
	--c-signal-icon-contrast: #161616;
	--c-signal-trash: #a4090a;
	--c-card-bgrd: 255, 255, 254; /* rgba value created at hover */
	--c-card-text: #fbfbfb;
	--c-btn-border: rgba(255, 255, 255, 0.5);
	--c-placeholder: #333333;
	--c-browser-window-grad: transparent
		radial-gradient(closest-side at 23% 40%, #0d9be4 0%, #003d99 100%) 0% 0%
		no-repeat padding-box;
	--c-cta-row: #053680;
}

/* RESETS */
* {
	margin: 0;
	box-sizing: border-box;
	font-family: inherit;
	line-height: 1;
	border: none;
	padding: 0;
}

a {
	color: inherit;
	text-decoration: inherit;
}

html {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-rendering: optimizeLegibility;
}

textarea,
input,
select,
option,
label,
button {
	-moz-appearance: none;
	-webkit-appearance: none;
	-ms-appearance: none;
	appearance: none;
	border: none;
	outline: 0;
	padding: 0;
	text-decoration: none;
	background: none;
	border-radius: 0;
	font-family: inherit;
	font-size: 100%;
	color: inherit;
	font-weight: inherit;
}

/* BASE STYLES */
@font-face {
	font-family: "nunito sans";
	src: url("../fonts/nunito-sans-400.woff") format("woff");
	font-weight: 400;
	font-style: normal;
	font-display: auto;
}
@font-face {
	font-family: "nunito sans";
	src: url("../fonts/nunito-sans-800.woff") format("woff");
	font-weight: 800;
	font-style: normal;
	font-display: auto;
}
@font-face {
	font-family: "nunito sans";
	src: url("../fonts/nunito-sans-300.woff") format("woff");
	font-weight: 300;
	font-style: normal;
	font-display: auto;
}

html {
	font-size: 16px;
	font-family: "nunito sans", sans-serif;
	font-weight: 300;
}

h1,
h2 {
	margin-left: -0.04em;
	font-size: 1.4em;
	font-weight: 700;
}
h1 {
	font-weight: 300;
}

input,
textarea {
	background-color: var(--c-input-bgrd);
	border-radius: 20px;
	padding: 0.5em 1em;
	border: 1px solid var(--c-btn-border);
	color: var(--c-placeholder);
}

input[type="date"] {
	appearance: auto;
	-moz-appearance: auto;
	-webkit-appearance: auto;
	min-height: 2.1em; /* Safari mobile */
}

input[type="checkbox"],
input[type="radio"] {
	padding: 0.6em;
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
	background-color: var(--c-signal-icon);
	position: relative;
}

input[type="checkbox"]:checked::after,
input[type="radio"]:checked::after {
	color: var(--c-signal-icon-contrast);
	content: "âœ”";
	font-size: 1.5em;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	display: inline-flex;
	flex-direction: column;
	justify-content: center;
}

input:focus,
textarea:focus,
button:focus,
select:focus,
a:focus {
	outline: var(--small) solid var(--c-outline);
}

ul,
ol {
	list-style: none;
}

::placeholder {
	color: var(--c-placeholder);
	opacity: 1;
}
/* stylelint-enable */

/* ACCESSIBILIY */
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
	overflow: hidden;
	clip: rect(0 0 0 0);
}

/* APP SCAFFOLDING */
body {
	background: var(--c-browser-window-grad);
	height: 100vh;
	overflow: hidden; /* to ease-in the modal */
	display: flex;
}

header,
nav {
	height: 4rem;
	padding: 0 2vw;
	display: flex;
	align-items: center;
}

.container {
	width: 100%;
	max-width: 800px;
	margin: 0 auto;
}

.main {
	background: var(--c-app-bgrd);
	color: var(--c-text);
	position: relative; /* eg for Add Item Bar */
	overflow: hidden;
}

/* HELPERs */
.hideScrollbars {
	-ms-overflow-style: none; /* Edge */
	scrollbar-width: none; /* Firefox */
}

.hideScrollbars::-webkit-scrollbar {
	display: none; /* Chrome, Safari and Opera */
}

.scrollable {
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
}

.ellipsis {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	width: 100%;
}

.hidden {
	display: none;
}

/***** APP COMPONENTS *****/

.status {
	font-size: 0.75em;
}

/*
Buttons
*/

button,
.btn {
	background: transparent;
	font: normal 1em / 1 sans-serif;
	border-radius: 20px;
	padding: 0 1em;
	height: 2.2em;
}

.btn_cancel {
	background-color: var(--c-input-bgrd);
	color: var(--c-input-contrast);
}

.btn_save {
	background-color: var(--c-signal-icon);
	color: var(--c-signal-icon-contrast);
	border: 1px solid var(--c-placeholder);
}
.btn_add {
	background-color: var(--c-signal-icon);
	color: var(--c-cta-row);
	margin: 0 2px;
}

.btn_filter {
	border: 1px solid var(--c-btn-border);
	border-radius: calc(var(--med) - 2px);
	margin-right: var(--med);
	transition: transform 0.3s;
	display: flex;
	align-items: center;
}

.btn_filter:hover {
	transform: scale(1.1);
}

/*
Settings
*/
.settings {
	position: absolute;
	right: 2vw;
}

button.settings {
	position: static;
	height: 100%;
	min-width: 20px;
	max-width: var(--large);
	padding: 0;
	display: flex;
	align-items: center;
	justify-content: center;
}

.settingsMenu {
	display: inline-block;
	position: absolute;
	z-index: 1;
	right: 0;
	top: 2rem;
	width: 10.1rem;
	max-height: 0;
	overflow: hidden;
	transition: max-height 0.4s cubic-bezier(0.392, -0.547, 0.07, 4.535);
}

.settingsMenu.open {
	height: auto;
	max-height: 1000px;
}

.settingsMenu_item {
	display: flex;
	padding: calc(var(--med) + var(--small)) var(--large);
	color: var(--c-signal-icon-contrast);
	background-color: var(--c-signal-icon);
}

.settingsMenu_item.radio {
	flex-direction: column;
}

.settingsMenu_radioWrapper {
	display: flex;
	justify-content: space-between;
	align-items: center;
	line-height: 2;
}

/*
Filter
*/
.filterRow {
	border-top: 1px solid rgba(var(--c-card-bgrd), 0.16);
	background-color: rgba(var(--c-card-bgrd), 0.05);
	display: flex;
}

/* awkward solution to a themeable (=svg or font in html) custom caret down icon in the sort option list: */
.dropdownIcon {
	color: var(--c-text);
	margin-right: calc(var(--med) - 2px);
}

/*
Article List
*/
.articleList {
	height: calc(100vh - 8rem - var(--ctaRow-height));
	padding: 0.5em 2vw;
	background-color: rgba(var(--c-card-bgrd), 0.05);
	border-radius: calc(var(--small));
}

.articleList_row {
	padding: var(--med);
	background-color: rgba(var(--c-card-bgrd), 0.16);
	transition: transform 0.3s;
	border-radius: var(--med);
	display: flex;
}

li.articleList_row {
	margin: 0 0 calc(var(--med) * 2);
}

.articleList_row:hover {
	background-color: rgba(var(--c-card-bgrd), 0.4);
	border: 1px solid var(--c-btn-border);
	transform: scale(1.03);
}

.articleList_meta {
	min-width: 8rem;
	align-self: center;
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;
	padding-right: var(--med);
}

.articleList_text {
	align-self: center;
	width: calc(100% - 9rem);
}

.articleList_meta input {
	margin-bottom: 0.3em;
}

.articleList_meta > input:checked ~ label {
	color: var(--c-signal-icon);
}

.articleList_text > h2 {
	margin-bottom: var(--small);
}

/*
Add Item Bar
*/
.ctaRow {
	position: fixed;
	bottom: 0;
	left: 0; /* take the whole width of .app for a clean drop-shadow */
	right: 0;
	z-index: 2; /* just above .articleList_row:hover */
	height: var(--ctaRow-height);
	background-color: var(--c-cta-row);
	padding: 0 2vw; /* l/r same as .app */
	display: flex;
	justify-content: center;
	align-items: center;
	font: normal 1rem / 1 sans-serif;
}

/*
MODAL
*/
.modal {
	/* transition: transform 0.3s ease;
	transform: translateY(300px); */
	display: none;
}

.modal.open {
	/* transform: translateY(0); */
	display: block;
}

.noteEditForm .formInputs {
	margin-top: var(--large);
	height: calc(100vh - var(--large) - var(--ctaRow-height));
	max-height: 700px;
	max-width: 640px;
	margin: 0 auto;
	display: grid;
	align-content: start;
	grid-template-columns: 1fr 6.125rem 13.125rem;
	gap: var(--large) 0;
	grid-template-areas:
		"Title Title Title"
		"Description Description Description"
		"empty Label_1 Content_1"
		"empty Label_2 Content_2";
	padding: var(--large) 2vw;
	background-color: rgba(var(--c-card-bgrd), 0.05);
	border-radius: calc(var(--small));
}

.noteEditForm .title {
	grid-area: Title;
}

.noteEditForm .title input {
	width: 100%;
}

.noteEditForm .description {
	grid-area: Description;
}

.noteEditForm .description textarea {
	width: 100%;
	resize: none;
}

.noteEditForm .label_1 {
	grid-area: Label_1;
	align-self: center;
}

.noteEditForm .content_1 {
	grid-area: Content_1;
	justify-self: end;
}

.noteEditForm .content_1 label {
	display: inline-flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-between;
	margin-right: var(--small);
}

.noteEditForm .content_1 input {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
}

.noteEditForm .content_1 input::before {
	position: absolute;
	display: inline-flex;
	flex-direction: column;
	justify-content: center;
	font-size: 90%;
	font-weight: bold;
	content: attr(value);
	color: var(--c-placeholder);
}

.noteEditForm .content_1 input:checked::before {
	content: "";
}

.noteEditForm .label_2 {
	grid-area: Label_2;
	align-self: center;
}

.noteEditForm .content_2 {
	grid-area: Content_2;
}

/*
MEDIA QUERIES
*/

/* root size */
@media screen and (min-width: 401px) {
	html {
		font-size: 4vw;
	}
}

@media screen and (min-width: 501px) {
	html {
		font-size: 20px;
	}
}

/* small landscape devices */
@media screen and (min-aspect-ratio: 2/1) and (max-height: 639px) {
	header {
		position: absolute;
		width: 1px;
		height: 1px;
		margin: -1px;
		padding: 0;
		border: 0;
		overflow: hidden;
		clip: rect(0 0 0 0);
	}

	.articleList {
		height: calc(100vh - 4rem - var(--ctaRow-height));
	}
}

/* limit app height for very high screens */
@media screen and (min-height: 1300px) {
	body {
		align-items: center;
	}

	.ctaRow {
		position: static;
	}

	.articleList {
		height: calc(1300px - 8rem - var(--ctaRow-height));
	}
}
